#!/usr/bin/env python
#
# Python basics documentation build configuration file, created by
# sphinx-quickstart on Thu Aug 30 09:17:41 2017.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another
# directory, add these directories to sys.path here. If the directory is
# relative to the documentation root, use os.path.abspath to make it
# absolute, like shown here.
#
# import sys
# sys.path.insert(0, os.path.abspath("."))
import os
import re

# Set canonical URL from the Read the Docs Domain
html_baseurl = os.environ.get("READTHEDOCS_CANONICAL_URL", "")

html_context = {}
# Tell Jinja2 templates the build is running on Read the Docs
if os.environ.get("READTHEDOCS", "") == "True":
    html_context["READTHEDOCS"] = True

# -- General configuration ---------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = "1.0"

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named "sphinx.ext.*") or your custom ones.
extensions = [
    "pygments_pytest",
    "sphinx.ext.autodoc",
    "sphinx.ext.viewcode",
    "sphinx.ext.intersphinx",
    "sphinxcontrib.plantuml",
    "sphinxcontrib.cairosvgconverter",
    "sphinxext.opengraph",
    "sphinx_copybutton",
    "sphinx_inline_tabs",
]

plantuml = "plantuml"
plantuml_output_format = "svg"

intersphinx_mapping = {
    "python3": ("https://docs.python.org/3/", None),
    "jupyter-tutorial": ("https://jupyter-tutorial.readthedocs.io/en/latest/", None),
    "Python4DataScience": ("https://www.python4data.science/en/latest/", None),
    "pytest": ("https://docs.pytest.org/en/latest/", None),
    "Sybil": ("https://sybil.readthedocs.io/en/latest/", None),
}

# http://peak.telecommunity.com delays crawling by 60 seconds.
linkcheck_timeout = 60

linkcheck_ignore = [
    r".*/_sources/.*/*.txt",
    # 403 Client Error
    r"https://anaconda.org/",
    r"https://distrowatch.com/",
    r"https://linux.die.net/",
    r"https://sourceforge.net/",
]

linkcheck_anchors_ignore = ["readme"]

# All HTTP redirections from the source URI to the canonical URI will be treated# as "working".
linkcheck_allowed_redirects = {
    r"https://devpi\.net/docs/$": r"https://devpi\.net/docs/[-a-z]+/(?:latest|stable|master)/$",
    r"https://click.palletsprojects.com/$": r"https://click.palletsprojects.com/[-a-z]+/(\d+\.)?(\d+\.)?(x|\d+)/$",
    # Unfortunately, the following regular expression fails: invalid group
    # reference 1. Therefore, the redirects for readthedocs must unfortunately
    # be specified individually.
    # r"https://([^/?#\.]+)\.readthedocs\.io/$": r"https://\1\.readthedocs\.io/[-a-z]+/(?:latest|stable|master)/$",
    r"https://cffi.readthedocs.io/$": r"https://cffi.readthedocs.io/[-a-z]+/(?:latest|stable|master)/$",
    r"https://cookiecutter.readthedocs.io/$": r"https://cookiecutter.readthedocs.io/[-a-z]+/(?:latest|stable|master)/$",
    r"https://faker.readthedocs.io/$": r"https://faker.readthedocs.io/[-a-z]+/(?:latest|stable|master)/$",
    r"https://hypothesis.readthedocs.io/$": r"https://hypothesis.readthedocs.io/[-a-z]+/(?:latest|stable|master)/$",
    r"https://nbsphinx.readthedocs.io/$": r"https://nbsphinx.readthedocs.io/[-a-z]+/(\d+\.)?(\d+\.)?(x|\d+)/$",
    r"https://cibuildwheel.pypa.io/$": r"https://cibuildwheel.pypa.io/[-a-z]+/(?:latest|stable|master)/$",
    # r"https://docs.pytest.org/$": r"https://docs.pytest.org/[-a-z]+/(\d+\.)?(\d+\.)?(x|\d+)/$",
    r"https://docs.pytest.org/$": r"https://docs.pytest.org/[-a-z]+/(?:latest|stable|master|(\d+\.)?(\d+\.)?(x|\d+))/$",
    r"https://docs.python.org/$": r"https://docs.python.org/3/$",
    r"https://gist.github.com": r"https://gist.github.com/.*",
    r"https://flit.pypa.io": r"https://flit.pypa.io/.*",
    r"https://docs.sqlalchemy.org": r"https://docs.sqlalchemy.org/[-a-z]+/(\d+\.)?(\d+\.)?(x|\d+)/$",
    r"https://github.com/settings/tokens": r"https://github.com/login?.*",
    r"https://github.com/veit/python-basics-tutorial/fork": r"https://github.com/login?.*",
    r"https://jinja.palletsprojects.com/$": r"https://jinja.palletsprojects.com/[-a-z]+/(?:latest|stable|master|(\d+\.)?(\d+\.)?(x|\d+))/$",
    r"https://pdm.fming.dev/$": r"https://pdm-project.org/[-a-z]+/(?:latest|stable|master)/$",
    r"https://pip.pypa.io/$": r"https://pip.pypa.io/[-a-z]+/(?:latest|stable|master)/$",
    r"https://pypi.org/manage/account/publishing/": r"https://pypi.org/account/login/.*",
    r"https://pytest-cov.readthedocs.io/$": r"https://pytest-cov.readthedocs.io/[-a-z]+/(?:latest|stable|master)/$",
    r"https://setuptools.readthedocs.io/$": r"https://setuptools.pypa.io/[-a-z]+/(?:latest|stable|master)/$",
    r"https://sphinx-git.readthedocs.io/$": r"https://sphinx-git.readthedocs.io/[-a-z]+/(?:latest|stable|master)/$",
    r"https://sphinxcontrib-napoleon.readthedocs.io/$": r"https://sphinxcontrib-napoleon.readthedocs.io/[-a-z]+/(?:latest|stable|master)/$",
    r"https://sphinx-needs.readthedocs.io/$": r"https://sphinx-needs.readthedocs.io/[-a-z]+/(?:latest|stable|master)/$",
    r"https://tox.readthedocs.io/$": r"https://tox.wiki/[-a-z]+/(\d+\.)?(\d+\.)?(x|\d+)/$",
    r"https://wheel.readthedocs.io/$": r"https://wheel.readthedocs.io/[-a-z]+/(?:latest|stable|master)/$",
    r"https://www.sphinx-doc.org/$": r"https://www.sphinx-doc.org/[-a-z]+/(?:latest|stable|master)/$",
}

linkcheck_exclude_documents = [r".*/dataprep/.*"]

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = [".rst", ".md"]
source_suffix = ".rst"

# The master toctree document.
master_doc = "index"

# General information about the project.
project = "Python Basics"
author = "Veit Schiele"
copyright = f"2021â€“2024, {author}"

show_authors = True

# The full version, including alpha/beta/rc tags
release = re.sub("^v", "", os.popen("git describe --abbrev=0").read().strip())

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = "en"

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ["_build", "Thumbs.db", ".DS_Store"]

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = "sphinx"

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False


# -- Options for HTML output -------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = "furo"
html_title = f"{project} {release}"

# Theme options are theme-specific and customize the look and feel of a
# theme further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
# html_static_path = ["_static"]
html_static_path = ["_static"]

html_logo = "_static/images/logo/logo.png"
html_favicon = "_static/images/logo/favicon.ico"


# -- Options for HTMLHelp output ---------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = "python-basics"


# -- Options for LaTeX output ------------------------------------------

latex_elements = {
    # The paper size ("letterpaper" or "a4paper").
    # "papersize": "letterpaper",
    #
    # The font size ("10pt", "11pt" or "12pt").
    # "pointsize": "10pt",
    #
    # Additional stuff for the LaTeX preamble.
    # "preamble": "",
    #
    # Latex figure (float) alignment
    # "figure_align": "htbp",
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title, author, documentclass
# [howto, manual, or own class]).
latex_documents = [
    (
        master_doc,
        "python-basics.tex",
        "Python Basics",
        "Veit Schiele",
        "manual",
    ),
]


# -- Options for manual page output ------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [(master_doc, "python-basics", "Python Basics", [author], 1)]


# -- Options for Texinfo output ----------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (
        master_doc,
        "python-basics",
        "Python Basics",
        author,
        "python-basics",
        "Python Basics.",
        "Miscellaneous",
    ),
]
